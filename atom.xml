<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fear Goidte</title>
  <logo>images/atom/logo-3a48577d.svg</logo>
  <icon>images/atom/icon-ec49dc8c.svg</icon>
  <subtitle>Pronounced like “Far Gotcha”. The splendid online isolation of me, James Ó Nuanáin, wherein I gather together any loose cleverness that I manage to accumulate. This site is, primarily an exegesis on how it was made. For the moment, it is mostly beak and bone with very little feather and fur.
</subtitle>
  <id>https://isfeargoidte.me.uk/</id>
  <link href="https://isfeargoidte.me.uk/"/>
  <link href="https://isfeargoidte.me.uk/atom.xml" rel="self"/>
  <updated>2016-06-18T09:06:00+01:00</updated>
  <author>
    <name>James Ó Nuanáin</name>
  </author>
  <entry>
    <title type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
In brief … abbreviations      </div>
    </title>
    <link rel="alternate" href="https://isfeargoidte.me.uk/2016/06/18/in-brief-abbreviations/"/>
    <id>https://isfeargoidte.me.uk/2016/06/18/in-brief-abbreviations/</id>
    <published>2016-06-18T09:06:00+01:00</published>
    <updated>2016-06-30T12:40:24+01:00</updated>
    <author>
      <name>James Ó Nuanáin</name>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
How to use and abuse these linguist amputees.      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
How to use and abuse these linguist amputees.<p>Abbreviations are shortcuts that have arisen as writers try to spend more time thinking about the words to come and less time writing down the words that they already have in mind. This is a usage and styling guide for abbreviations, acronyms, contractions, clippings, and initialisms in web documents and includes some code examples.</p>

<p>Where possible, abbreviations should be avoided due to their propensity towards jargon and their limited shelf life. For example, unless specificity is necessary, use “mark-up” instead of “<abbr title="eXtensible Hypertext Mark-up Language" class="initialism">X.H.T.M.L.</abbr>”.</p>

<p>As a general rule, words should be written as they would be pronounced. Mark-up can’t be used inside the <code>title</code> element or inside attributes, so the formatting you use in those circumstances should be unambiguous.</p>

<p>Since my adoption of the Gregorian Calendar, I’ve blogged on this subject twice before. Nine years ago I referenced the following quote:</p>

<blockquote>
<footer>‘Roger’ commenting on <cite><a href="http://web.archive.org/web/20060326005449/http://www.huddledmasses.org/2004/10/27/sick-of-semantics/">Sick of Semantics</a></cite> on Huddledmasses.org (<a href="https://archive.org">archive.org</a> link)</footer>
Semantic markup is silly. I see the same terms commonly defined and that by logical extension is foolish. If you don’t know what <abbr title="Really Simply Syndiation" class="initialism">R.S.S.</abbr> means, for instance, having it explained to you as Really Simply Syndiation means <em>nothing</em>. If you already have an <abbr title="Really Simply Syndiation" class="initialism">R.S.S.</abbr> reader, meaning you actually care about <abbr title="Really Simply Syndiation" class="initialism">R.S.S.</abbr>, then you don’t need it explained.
</blockquote>

<p>This raises a number of a issues:</p>

<ul>
<li>visual browsers are not the only devices for which mark-up is designed, it is also used by speech and braille readers as well as web crawlers for search engines. <code>abbr</code> is not just a hook to attach an explanative <code>title</code> attribute, but also to make it clear that what it contains is not a pronounceable word;</li>
<li>recognition; the abbreviation may be common currency at the moment but obscure at a later date. It may be familiar in the United Kingdom but unusual in Australia. Abbreviations are not the exclusive preserve of technical terms;</li>
<li>the same collection of capital letters could stand for one thing in one context and something else in another: <dfn>A.A.</dfn> for <em>Alcoholics Anonymous</em>, or for <em>The Automobile Association</em>;</li>
<li>whilst you might make your abbreviations clear at the beginning of a document or a series of documents, that data could be reused through syndication excerpts, or just cut and pasting, and the abbreviations stripped of their context, meaning, and intended pronunciation;</li>
<li>the title attribute of <code>abbr</code> is also potentially useful for search engines and other robotic user agents where the individual words that comprise an initialism or acronym might be of interest on their own to collect references; and</li>
<li>translation, the title attribute provides something to translate that is not dependent on formatting.</li>
</ul>

<h2 id="clippings-and-contractions">Clippings and contractions</h2>

<p>Contractions are made by omitting the middle letters of a word, such as Dr for Doctor.</p>

<p>British English follows formal French usage where a full stop only follows clippings, where some of the letters are ‘clipped’ off from a word towards the end as in the abbreviation for abbreviation: “<abbr title="abbreviation">abbr.</abbr>”.</p>

<p>Both of these should be marked-up using <code>abbr</code> tags including the relevant title in every instance.</p>

<h2 id="initialisms-amp-acronyms">Initialisms &amp; acronyms</h2>

<p>Initialisms are a group of, <em>usually</em>, initial letters used as an abbreviation for a name or expression. In initialisms, each letter is pronounced separately, in acronyms the initial letters form a pronounceable word.</p>

<p><cite><abbr title="eXtensible Hypertext Mark-up Language" class="initialism">X.H.T.M.L.</abbr>5</cite> has abandoned the distinction between initialisms (<code>abbr</code>) and acronyms (<code>acronym</code>), so there is no purpose to formatting them differently. At least this clears up the confusion of abbreviations such as <abbr title="Frequently Asked Questions" class="initialism">F.A.Q.</abbr> which some people treat as an acronym and others as an initialism.</p>

<p>It used to be the convention that since each letter of an initialism or acronym represented an abbreviated word, each letter would be followed by a full stop to indicate the clipped letters.</p>

<p>This convention has fallen into abeyance (elsewhere) on the dubious grounds that the result looks fussy and that the fact that the letters are in uppercase should be sufficient to indicate that they form an initialism or acronym.</p>

<p>Loathe as I am to use uppercase for formatting, I do not want to totally rule it out. Properly peppering initialism and acronyms with full stops makes it clear and unambiguous what they are to all user agents without them having to have prior knowledge of them.</p>

<p>The first instance of an acronym or initialism should be followed by it being written out in full: Irish Republican Army (<dfn>I.R.A.</dfn>). Any instance with an adjacent definition should be contained within a <code>dfn</code> element but should not be wrapped in an <code>abbr</code>; all other instances should be contained <em>within</em> the <code>abbr</code> element with the appropriate <code>title</code> attribute.</p>

<h3 id="latinate">Latinate</h3>

<p>Although obvious when visually represented to an English speaker they become more obscure to translation software and speech readers especially when accounting for the options when formatting them (<abbr lang="la" title="exempli gratia" class="initialism">e.g.</abbr> “ie”, “i.e.”, “i. e.”).</p>

<p>To my mind, the most sensible approach is to mark them up as <code>abbr</code> with the <code>title</code> containing the English translation, so: <code>&lt;abbr title=&quot;that is&quot;&gt;i.e.&lt;/abbr&gt;</code>. This also alleviates the confusion people have between the differing uses of <abbr xml:lang="la" title="exempli gratia">e.g.</abbr> and <abbr xml:lang="la" title="id est">i.e.</abbr>.</p>

<p>However, due to my personal misfortune in having gone to one of <em>those</em> schools, I prefer to use Latin in the <em>title</em> and mark-up the element as being in Latin (<code>xml:lang=&quot;la&quot;</code>).</p>

<p>The three most commonly used latinate initialisms are:</p>

<ul>
<li><abbr lang="la" title="exempli gratia" class="initialism">e.g.</abbr> (<code>&lt;abbr lang=&quot;la&quot; title=&quot;exempli gratia&quot; class=&quot;initialism&quot;&gt;e.g.&lt;/abbr&gt;</code>)</li>
<li><abbr lang="la" title="et cetera">&amp;c.</abbr> (<code>&lt;abbr lang=&quot;la&quot; title=&quot;et cetera&quot;&gt;&amp;c.&lt;/abbr&gt;</code>)</li>
<li><abbr lang="la" title="id est" class="initialism">i.e.</abbr> (<code>&lt;abbr lang=&quot;la&quot; title=&quot;id est&quot; class=&quot;initialism&quot;&gt;i.e.&lt;/abbr&gt;</code>)</li>
</ul>

<p>Style guides often recommend that these these initialisms should be followed by a comma, personally I think that a fullstop abutting a comma is visually confusing. It also creates issues of comprehension when the initialism is followed by a list, the comma can imply that the initialism is part of the list. Therefore though they should be preceded by punctuation (bracket, semi colon, comma, <abbr lang="la" title="et cetera">&amp;c.</abbr>) they should not be immediately followed by any.</p>

<h3 id="names">Names</h3>

<p>Wikipedia has a list of <a href="https://en.wikipedia.org/wiki/List_of_literary_initials">literary personæ</a> known, primarily, by the initials of their first and middle name(s) with their surname in full. In formal or polite documents people are also often referred to in this manner as well as in lists of names such as registers.</p>

<p>Individual initials must be separated by fullstops otherwise it is ambiguous as to whether they constitute a word in capital letters or letters to be spelt out. It is important to use a non-breaking space between the last initial and the surname to minimise the chance of them being struck asunder by an inopportune line-break. I use a Narrow No-Break Space <code>&amp;#8239;</code> to reduce the gap between the initials and the surname and thereby emphasis their indivisibility: J.P.&#8239;Donleavy.</p>

<p><strong>Note:</strong> I find it advisable to use character entity references for non-standard spaces in mark-up since it is easier to identify them in the source code than if they had been simply entered directly in a document.</p>

<h2 id="styling">Styling</h2>

<p>I like to maintain the convention that links and only links, should be underlined. I also try to avoid abbreviations appearing in a line on their own at the end of a run of text, hence <code>break-before : avoid</code>:</p>
<pre class="code-quote css"><code><span class="nt">abbr</span> <span class="p">{</span>
    <span class="nl">border-bottom</span> <span class="p">:</span> <span class="nb">none</span><span class="p">;</span>
    <span class="nl">break-before</span> <span class="p">:</span> <span class="nb">avoid</span><span class="p">;</span>
    <span class="nl">text-decoration</span> <span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>
</code></pre>

<p>Some fonts are excessively generous with the white-space they afford to punctuation so I <em>very</em> slightly reduce letter spacing for initialisms by assigning them a <code>class</code>. I find long runs of uppercase ‘shouty’ so, in mitigation, I reduce their font-size:</p>
<pre class="code-quote css"><code><span class="nt">abbr</span><span class="nc">.initialism</span> <span class="p">{</span>
    <span class="nl">font-size</span> <span class="p">:</span> <span class="m">.9em</span><span class="p">;</span>
    <span class="nl">letter-spacing</span> <span class="p">:</span> <span class="m">-.05em</span>
<span class="p">}</span>
</code></pre>
      </div>
    </content>
  </entry>
  <entry>
    <title type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Previously known as ‘coming up next!’      </div>
    </title>
    <link rel="alternate" href="https://isfeargoidte.me.uk/2016/06/16/previously-known-as-coming-up-next/"/>
    <id>https://isfeargoidte.me.uk/2016/06/16/previously-known-as-coming-up-next/</id>
    <published>2016-06-16T08:18:00+01:00</published>
    <updated>2016-06-30T12:38:56+01:00</updated>
    <author>
      <name>James Ó Nuanáin</name>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Sequentially linking web documents, a simple mark-up and styling example with some wooly logical thinking.      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Sequentially linking web documents, a simple mark-up and styling example with some wooly logical thinking.<blockquote>
<footer>The opening line of <cite>One Way or Another</cite> by Nigel Harrison and Debbie Harry</footer>
One way or another, I’m gonna find ya’
</blockquote>

<h2 id="background">Background</h2>

<p>The <a href="http://www.w3.org/TR/html5/links.html#sequential-link-types"><code>next</code> and <code>prev</code> <code>rel</code> link attributes</a> are most useful for documents that fall into a nice narrative sequence such as the chapters in a book. However, they also make a popular linear navigation aid for chronologically ordered articles such as blogs—which is the example that I am using here.</p>

<h2 id="which-where-when-what">Which where? When what?</h2>

<p>In determining the order of <em>next</em> and <em>previous</em> there is little to recommend either choice, but I am following the convention that <dfn>next</dfn> is newer and <dfn>previous</dfn> is older. Also that <em>previous</em> comes first in the document and displays left, as in going back through a book or back along a line of text and that <em>next</em> comes after and displays right as in moving forward through a book or along a line of text.</p>

<h2 id="mark-up">Mark-up</h2>

<p>Next and previous links are marked-up in an un-ordered list and use the <code>rel</code> and <code>accesskey</code> attributes. An additional link to a list of all the documents in the sequence is given in between the <code>next</code> and <code>prev</code> links:</p>
<pre class="code-quote xml"><code><span class="nt">&lt;div</span> <span class="na">role=</span><span class="s">"navigation"</span> <span class="na">class=</span><span class="s">"page-navigation"</span><span class="nt">&gt;</span>
      <span class="nt">&lt;ul&gt;</span>
            <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"older-document.xhtml"</span> <span class="na">rel=</span><span class="s">"prev"</span> <span class="na">accesskey=</span><span class="s">"p"</span> <span class="na">title=</span><span class="s">"Previous article: Title of older document"</span><span class="nt">&gt;</span>Title of older document<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
            <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"archives.xhtml"</span><span class="nt">&gt;</span>All documents<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
            <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"newer-document.xhtml"</span> <span class="na">title=</span><span class="s">"Next article: Title of newer document"</span> <span class="na">rel=</span><span class="s">"next"</span> <span class="na">accesskey=</span><span class="s">"n"</span><span class="nt">&gt;</span>Title of newer document<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
      <span class="nt">&lt;/ul&gt;</span>
<span class="nt">&lt;/div&gt;</span><span class="c">&lt;!-- End role=navigation --&gt;</span>
</code></pre>

<p>The access key attribute values follow the convention <a href="https://www.standardaccesskeys.com/SAK2014/">SAK2014: Standard Access Keys 2014</a></p>

<p>The title attribute is set and explicitly states whether the link is <em>next</em> or <em>previous</em>. This is for non-visual browsers but also if you were to hide the text of the link and use only a symbol instead, it could describe the link via a tooltip.</p>

<p>In both the first and last documents of a sequence, there will only be one link (either <em>previous</em> <strong>or</strong> <em>next</em>—depending on your logic).</p>

<p>It could be considered that a list element is overkill. Whilst I do not subscribe to the radical <em>no item</em> list agendum (<a href="http://www.w3.org/TR/html5/grouping-content.html#the-ul-element&quot;">The <code>ul</code> element on <abbr title="World Wide Web Consortium">W.3.C.</abbr>’s <abbr title="HyperText Markup Language">H.T.M.L.</abbr>5 Recommendation</a>), I am existentially comfortable with the notion that a list of one item is nevertheless a list. It may have dwindled down from a mighty tally; be an unlimited catalogue in initial, singular, or embryonic form; or it might just be a list of things that encompasses but one thing.</p>

<h3 id="generating-in-a-middleman-static-blog">Generating in a Middleman static blog</h3>

<p>I use the following code to generate the above mark-up in a middleman static website (I’m presupposing that you have the <a href="https://github.com/middleman/middleman-blog"><code>middleman-blog</code></a> extension):</p>
<pre class="code-quote erb"><code><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">current_article</span><span class="p">.</span><span class="nf">previous_article</span> <span class="o">||</span> <span class="n">current_article</span><span class="p">.</span><span class="nf">next_article</span> <span class="c1"># if any links </span><span class="cp">%&gt;</span>
<span class="nt">&lt;div</span> <span class="na">role=</span><span class="s">"navigation"</span> <span class="na">class=</span><span class="s">"post-navigation&gt;
    &lt;ol"</span><span class="nt">&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="c1"># if any links </span><span class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="n">prev_article</span> <span class="o">=</span> <span class="n">current_article</span><span class="p">.</span><span class="nf">previous_article</span> <span class="cp">%&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">prev_article</span> <span class="cp">%&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">prev_article</span><span class="p">.</span><span class="nf">title</span><span class="p">,</span> <span class="n">prev_article</span><span class="p">.</span><span class="nf">url</span><span class="p">,</span> <span class="ss">title: </span><span class="s2">"Previous article: </span><span class="si">#{</span><span class="n">prev_article</span><span class="p">.</span><span class="nf">title</span><span class="si">}</span><span class="s2">"</span><span class="p">,</span> <span class="ss">rel: </span><span class="s1">'prev'</span><span class="p">,</span> <span class="ss">accesskey: </span><span class="s1">'p'</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">end</span> <span class="c1"># if prev article </span><span class="cp">%&gt;</span>
        <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"</span><span class="cp">&lt;%=</span> <span class="n">url_for</span> <span class="s2">"/archives.xhtml"</span> <span class="cp">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span>All articles<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
        <span class="cp">&lt;%</span> <span class="n">next_article</span> <span class="o">=</span> <span class="n">current_article</span><span class="p">.</span><span class="nf">next_article</span> <span class="cp">%&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">next_article</span> <span class="cp">%&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">next_article</span><span class="p">.</span><span class="nf">title</span><span class="p">,</span> <span class="n">next_article</span><span class="p">.</span><span class="nf">url</span><span class="p">,</span> <span class="ss">title: </span><span class="s2">"Next article: </span><span class="si">#{</span><span class="n">next_article</span><span class="p">.</span><span class="nf">title</span><span class="si">}</span><span class="s2">"</span><span class="p">,</span> <span class="ss">rel: </span><span class="s1">'next'</span><span class="p">,</span> <span class="ss">accesskey: </span><span class="s1">'n'</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">end</span> <span class="c1"># if next article </span><span class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">current_article</span><span class="p">.</span><span class="nf">previous_article</span> <span class="o">||</span> <span class="n">current_article</span><span class="p">.</span><span class="nf">next_article</span> <span class="c1"># if any links </span><span class="cp">%&gt;</span>
    <span class="nt">&lt;/ol&gt;</span>
<span class="nt">&lt;/div&gt;</span><span class="c">&lt;!--End post navigation--&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="c1"># if any links </span><span class="cp">%&gt;</span>
</code></pre>

<h2 id="visual-and-print-styling">Visual and print styling</h2>

<h3 id="visual">Visual</h3>
<pre class="code-quote css"><code><span class="k">@charset</span> <span class="n">utf-8</span><span class="p">;</span>

<span class="nt">body</span> <span class="p">{</span>
    <span class="nl">line-height</span> <span class="p">:</span> <span class="m">1.4</span><span class="p">;</span>
    <span class="nl">padding</span> <span class="p">:</span> <span class="m">0</span> <span class="m">1.4em</span>
<span class="p">}</span>

<span class="nc">.page-navigation</span> <span class="p">{</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">relative</span>
<span class="p">}</span>

<span class="nc">.page-navigation</span> <span class="nt">a</span> <span class="p">{</span>
    <span class="nl">width</span> <span class="p">:</span> <span class="m">33%</span>
<span class="p">}</span>

<span class="nc">.page-navigation</span> <span class="nt">a</span><span class="o">,</span>
<span class="nc">.page-navigation</span> <span class="nt">a</span><span class="o">[</span><span class="nt">rel</span><span class="o">=</span><span class="nt">next</span><span class="o">]</span><span class="nd">::after</span><span class="o">,</span>
<span class="nc">.page-navigation</span> <span class="nt">a</span><span class="o">[</span><span class="nt">rel</span><span class="o">=</span><span class="nt">prev</span><span class="o">]</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">absolute</span><span class="p">;</span>
    <span class="nl">top</span> <span class="p">:</span> <span class="m">0</span>
<span class="p">}</span>

<span class="nc">.page-navigation</span> <span class="nt">li</span><span class="o">,</span>
<span class="nc">.page-navigation</span> <span class="nt">ul</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="nb">inline</span>
<span class="p">}</span>

<span class="nc">.page-navigation</span> <span class="nt">a</span><span class="o">[</span><span class="nt">rel</span><span class="o">=</span><span class="nt">next</span><span class="o">]</span> <span class="p">{</span>
    <span class="nl">right</span> <span class="p">:</span> <span class="m">0%</span><span class="p">;</span>
    <span class="nl">text-align</span> <span class="p">:</span> <span class="nb">right</span>
<span class="p">}</span>

<span class="nc">.page-navigation</span> <span class="nt">a</span><span class="o">[</span><span class="nt">rel</span><span class="o">=</span><span class="nt">prev</span><span class="o">]</span> <span class="p">{</span>
    <span class="nl">left</span> <span class="p">:</span> <span class="m">0</span>
<span class="p">}</span>

<span class="nc">.page-navigation</span> <span class="nt">a</span><span class="nd">:not</span><span class="o">([</span><span class="nt">rel</span><span class="o">=</span><span class="nt">next</span><span class="o">],[</span><span class="nt">rel</span><span class="o">=</span><span class="nt">prev</span><span class="o">])</span> <span class="p">{</span>
    <span class="nl">left</span> <span class="p">:</span> <span class="m">33%</span><span class="p">;</span>
    <span class="nl">text-align</span> <span class="p">:</span> <span class="nb">center</span>
<span class="p">}</span>

<span class="nc">.page-navigation</span> <span class="nt">a</span><span class="o">[</span><span class="nt">rel</span><span class="o">=</span><span class="nt">next</span><span class="o">]</span><span class="nd">::after</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">" ☞"</span><span class="p">;</span>
    <span class="nl">right</span> <span class="p">:</span> <span class="m">-1.4em</span>
<span class="p">}</span>

<span class="nc">.page-navigation</span> <span class="nt">a</span><span class="o">[</span><span class="nt">rel</span><span class="o">=</span><span class="nt">prev</span><span class="o">]</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"☜ "</span><span class="p">;</span>
    <span class="nl">left</span> <span class="p">:</span> <span class="m">-1.4em</span>
<span class="p">}</span>
</code></pre>

<p>View an <a href="http://codepen.io/FearGoidte/details/eprEpO/">example of the screen styling and mark-up on Codepen</a></p>

<h3 id="print">Print</h3>

<p>Navigation serves no purpose in a printed version of the document so for the print stylesheet add:</p>
<pre class="code-quote css"><code><span class="nc">.page-navigation</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>
</code></pre>
      </div>
    </content>
  </entry>
  <entry>
    <title type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The laziness of type      </div>
    </title>
    <link rel="alternate" href="https://isfeargoidte.me.uk/2016/06/06/the-laziness-of-type/"/>
    <id>https://isfeargoidte.me.uk/2016/06/06/the-laziness-of-type/</id>
    <published>2016-06-06T16:12:00+01:00</published>
    <updated>2016-06-30T12:37:54+01:00</updated>
    <author>
      <name>James Ó Nuanáin</name>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Using text replacement to create your own ‘house style’ and to add a little diversity to your graphemes.      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Using text replacement to create your own ‘house style’ and to add a little diversity to your graphemes.<p>Gutenberg’s acceleration of the production of the written word also facilitated a mass cull of the graphemes used to transmit it. The typewriter followed suit with its limitations of keyboard and the breadth of the hands spanning it.</p>

<p>We use less variety of punctuation; shed accents and flourishes on imported words; have abandoned ligatures such as <em>æ</em> and <em>œ</em>, and even abandoned entire letters such as English’s <em>Þ</em>. These expunctions have not been driven by organic changes in usage or passing literary fashion, such as the ebb and flow of semi-colon use or the demise of the long-s (<em>ſ</em>). These changes are due to technical limitations.</p>

<p>Computers could have facilitated a resurrection of diversity but instead merely reaffirmed the status quo ante. With the aid of <abbr title="Mac Operating System Ten" class="initialism">O.S.X.</abbr> and <abbr title="Apple’s touchscreen operating system" class="initialism">i.O.S.</abbr>’s (or operating systems of equal distinction) built-in text replacement, you can restore some diversity to the screen blinking in front of you; to do it elsewhere, you’ll have to leave the house.</p>

<p>The use of a greater heterogeneity of punctuation (especially curly quotes, prime symbols, and hyphens and spaces of divers width) provide additional nudges to speed a readers comprehension.</p>

<p>The ligatures, accents, traditional spellings (-<em>ize</em>), and the letter variants provide hints at etymology and passing novelty for the reader.</p>

<p>The attached file for importation includes the ebullient use of ligatures (some of which like <em>Ægypt</em> might be jarring); and many but by no means all replacements for words whose etymology inclines them to an -<em>ize</em> rather than an -<em>ise</em> spelling. There are also closing single quotes for contractions as well as accents for some Japanese and Arabic words transliterated into English. It is a very opinionated list so prepare to prune:</p>

<p><a href="/downloads/Text Substitutions.plist.7z" download="Text Substitutions.plist.7z">Download <em>Text substitutions</em></a>.</p>

<p>To import the <code>.plist</code> file into <abbr title="Mac Operating System Ten" class="initialism">O.S.X.</abbr> (El Capitan): extract it from the archive, open <code>System Preferences/Keyboard/Text</code> and drag the plist onto the window showing the existing text shortcuts.</p>

<p>If you have other computers using <abbr title="Apple’s touchscreen operating system" class="initialism">i.O.S.</abbr> or <abbr title="Mac Operating System Ten" class="initialism">O.S.X.</abbr> syncing to the same computer or iCloud account, the replacements should be synced to, and replicated on, them.</p>
      </div>
    </content>
  </entry>
  <entry>
    <title type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
BBEdit package for Middleman      </div>
    </title>
    <link rel="alternate" href="https://isfeargoidte.me.uk/2016/06/06/bbedit-package-for-middleman/"/>
    <id>https://isfeargoidte.me.uk/2016/06/06/bbedit-package-for-middleman/</id>
    <published>2016-06-06T00:46:00+01:00</published>
    <updated>2016-06-30T12:38:09+01:00</updated>
    <author>
      <name>James Ó Nuanáin</name>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
An assortment of clippings, scripts, and stationary for developing <a href="https://middlemanapp.com">Middleman</a> static websites using the <a href="http://www.barebones.com/products/bbedit/">BBEdit</a> text editor.
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
An assortment of clippings, scripts, and stationary for developing <a href="https://middlemanapp.com">Middleman</a> static websites using the <a href="http://www.barebones.com/products/bbedit/">BBEdit</a> text editor.
<p>I’m always guilty of underusing BBEdit and since it’s my text editor of choice and Middleman is my website development tool of choice I’ve made a modest effort to improve the way I use the two together.</p>

<p>I’ve put this package on GitHub (<a href="https://github.com/FearGoidte/Middleman.bbpackage">FearGoidte/Middleman.bbpackage</a>) in the hope that it might prove of use to someone or even more than one. If you do find this useful, and you expand upon it, please create a fork and create a pull request if you want me to incorporate your improvements into my version.</p>

<p>This package is a work in progress, it includes a few useful <a href="http://www.barebones.com/support/bbedit/clippings_library.html">clippings</a> (more to come); scripts to launch the preview server and open the site in the default browser, build the site, and using <a href="https://github.com/middleman-contrib/middleman-deploy">middleman-deploy</a> to deploy it to a server.</p>
      </div>
    </content>
  </entry>
  <entry>
    <title type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Render unto me, a table of contents      </div>
    </title>
    <link rel="alternate" href="https://isfeargoidte.me.uk/2016/05/23/render-unto-me-a-table-of-contents/"/>
    <id>https://isfeargoidte.me.uk/2016/05/23/render-unto-me-a-table-of-contents/</id>
    <published>2016-05-23T15:02:00+01:00</published>
    <updated>2016-06-30T12:38:29+01:00</updated>
    <author>
      <name>James Ó Nuanáin</name>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
To have an automatically generated table of contents whilst using the <a href="https://middlemanapp.com">Middleman</a> static site generator with Embedded Ruby for templates/layouts and markdown for simple formatting, I have made some modifications to a vanilla install of Middleman.
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
To have an automatically generated table of contents whilst using the <a href="https://middlemanapp.com">Middleman</a> static site generator with Embedded Ruby for templates/layouts and markdown for simple formatting, I have made some modifications to a vanilla install of Middleman.
<h2 id="background">Background</h2>

<p>Please bear in mind, that I am no programmer and have merely hacked together this ugly edifice. However, since I couldn’t <a href="https://duckduckgo.com">DuckDuckGo</a> a way of doing this I thought I would share my solution in case it is of use to someone else.</p>

<h2 id="code">Code</h2>

<h3 id="change-markdown-renderer-to-red-carpet">Change markdown renderer to red carpet</h3>

<p>Firstly, I am using <a href="https://github.com/vmg/redcarpet">Redcarpet</a> as my markdown renderer. Installation instructions are on their site. Once it is installed, to add Redcarpet to Middleman, insert the following into Middleman’s <code>Gemfile</code>:</p>
<pre class="code-quote ruby"><code><span class="n">gem</span> <span class="s2">"redcarpet"</span>
</code></pre>

<h3 id="generate-the-id-attributes-for-the-headings">Generate the <code>id</code> attributes for the headings</h3>

<p>In the <code>config.erb</code> file, I made the following changes.</p>

<p>Switched the renderer from the default <a href="http://kramdown.gettalong.org">Kramdown</a> to Redcarpet:</p>
<pre class="code-quote ruby"><code><span class="n">set</span> <span class="ss">:markdown_engine</span><span class="p">,</span> <span class="ss">:redcarpet</span>
<span class="n">set</span> <span class="ss">:markdown</span><span class="p">,</span> <span class="ss">with_toc_data: </span><span class="kp">true</span><span class="p">,</span>
               <span class="ss">xhtml: </span><span class="kp">true</span>
</code></pre>

<p>Create a helper file:</p>
<pre class="code-quote ruby"><code><span class="k">def</span> <span class="nf">table_of_contents</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">config</span><span class="p">.</span><span class="nf">markdown_engine</span> <span class="o">==</span> <span class="ss">:redcarpet</span> <span class="o">&amp;&amp;</span> <span class="n">config</span><span class="p">.</span><span class="nf">markdown</span><span class="p">[</span><span class="ss">:with_toc_data</span><span class="p">]</span>
    <span class="n">renderer</span> <span class="o">=</span> <span class="no">Redcarpet</span><span class="o">::</span><span class="no">Markdown</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="no">Redcarpet</span><span class="o">::</span><span class="no">Render</span><span class="o">::</span><span class="no">HTML_TOC</span><span class="p">,</span>
                                       <span class="ss">fenced_code_blocks: </span><span class="kp">true</span><span class="p">,</span>
                                       <span class="ss">xhtml: </span><span class="kp">true</span><span class="p">)</span>
    <span class="n">file</span> <span class="o">=</span> <span class="o">::</span><span class="no">File</span><span class="p">.</span><span class="nf">read</span><span class="p">(</span><span class="n">page</span><span class="p">.</span><span class="nf">source_file</span><span class="p">)</span>
    <span class="n">tocpre</span> <span class="o">=</span> <span class="s1">'&lt;nav&gt;&lt;h2&gt;Table of contents&lt;/h2&gt;'</span>
    <span class="n">tocpost</span> <span class="o">=</span> <span class="s1">'&lt;/nav&gt;'</span>
    <span class="c1"># ignore YAML frontmatter</span>
    <span class="n">file</span> <span class="o">=</span> <span class="n">file</span><span class="p">.</span><span class="nf">gsub</span><span class="p">(</span><span class="sr">/^(---\s*\n.*?\n?)^(---\s*$\n?)/m</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span>
    <span class="n">file</span> <span class="o">=</span> <span class="n">file</span><span class="p">.</span><span class="nf">gsub</span><span class="p">(</span><span class="s1">' &amp; '</span><span class="p">,</span> <span class="s1">' &amp;amp; '</span><span class="p">)</span>
    <span class="c1"># Switch to ordered lists</span>
    <span class="n">toc</span> <span class="o">=</span> <span class="n">renderer</span><span class="p">.</span><span class="nf">render</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
    <span class="n">toc</span> <span class="o">=</span> <span class="n">toc</span><span class="p">.</span><span class="nf">sub</span><span class="p">(</span><span class="s1">'&lt;ul&gt;'</span><span class="p">,</span> <span class="s1">'&lt;ol property="dcterms:tableofContents"&gt;'</span><span class="p">)</span>
    <span class="n">toc</span> <span class="o">=</span> <span class="n">toc</span><span class="p">.</span><span class="nf">gsub</span><span class="p">(</span><span class="s1">'&lt;ul&gt;'</span><span class="p">,</span> <span class="s1">'&lt;ol&gt;'</span><span class="p">)</span>
    <span class="n">toc</span> <span class="o">=</span> <span class="n">toc</span><span class="p">.</span><span class="nf">gsub</span><span class="p">(</span><span class="s1">'&lt;/ul&gt;'</span><span class="p">,</span> <span class="s1">'&lt;/ol&gt;'</span><span class="p">)</span>
    <span class="n">tocpre</span> <span class="o">+</span> <span class="n">toc</span> <span class="o">+</span> <span class="n">tocpost</span> <span class="k">unless</span> <span class="n">toc</span><span class="p">.</span><span class="nf">empty?</span>
  <span class="k">end</span> <span class="c1"># End check for Redcarpet and toc_data</span>
<span class="k">end</span>

</code></pre>

<p>Save the above code in a new file named  and saved in the <code>my_test_website\helpers\table_of_contents.rb</code> where “<code>my_test_website</code>” is the name of your project’s directory.</p>

<h3 id="generate-the-table-of-contents">Generate the table of contents</h3>

<p>The table of contents can then be added to a file that is processing embedded Ruby by adding the following code:</p>
<pre class="code-quote ruby"><code>    <span class="o">&lt;</span><span class="sx">%= table_of_contents(current_page) %&gt;
</span></code></pre>

<p>I tend to add this to my templates but it could also be added to an ‘article’ or ‘page’ file as long as the first of its extensions is <code>.erb</code>.</p>

<h2 id="end-note">End note</h2>

<p>I am sure that the code above could be simplified. <a href="https://github.com/vmg/redcarpet/issues/529"><em>Redcarpet</em> has an issue rendering ampersands and other characters with its renderer</a> so this code will need to be amended once that is fixed (<code>file = file.gsub(&#39; &amp; &#39;, &#39; &amp;amp; &#39;)</code>).</p>
      </div>
    </content>
  </entry>
  <entry>
    <title type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Enumerate the ways      </div>
    </title>
    <link rel="alternate" href="https://isfeargoidte.me.uk/2016/04/02/enumerate-the-ways/"/>
    <id>https://isfeargoidte.me.uk/2016/04/02/enumerate-the-ways/</id>
    <published>2016-04-02T22:25:00+01:00</published>
    <updated>2016-06-30T12:37:32+01:00</updated>
    <author>
      <name>James Ó Nuanáin</name>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The visual formatting of the <a href="https://www.w3.org/TR/html5/grouping-content.html#the-ol-element"><code>ol</code></a> and <a href="https://www.w3.org/TR/html5/grouping-content.html#the-ul-element"><code>ul</code></a> list elements and in particular; using generated content for the markers, setting them outside the list text, and having them ‘hang’ in the margin of the parent element.
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The visual formatting of the <a href="https://www.w3.org/TR/html5/grouping-content.html#the-ol-element"><code>ol</code></a> and <a href="https://www.w3.org/TR/html5/grouping-content.html#the-ul-element"><code>ul</code></a> list elements and in particular; using generated content for the markers, setting them outside the list text, and having them ‘hang’ in the margin of the parent element.
<h2 id="background">Background</h2>

<p>The styles I use are designed to produce certain outcomes and have specific limitations which might conflict with your own needs. The full stylings used here as well as list examples is available on the Codepen (<a href="http://codepen.io/FearGoidte/pen/xVXJyg"><cite>Nested ordered and unordered lists with hanging markers</cite></a>).</p>

<h3 id="adaptability-of-styles">Adaptability of styles</h3>

<p>A list is <dfn>nested</dfn> when it is the direct descendent of another list as in the following stylesheet selector examples:</p>

<ul>
<li><code>ol &gt; li &gt; ol</code> and</li>
<li><code>ul &gt; li &gt; ol</code>.</li>
</ul>

<p>The number of direct-ancestor list elements a list has determines its nesting <dfn>level</dfn>.</p>

<h4 id="ordered-lists">Ordered lists</h4>

<p>Ordered lists are numbered 1., 1.1, 1.1.1 <abbr lang="la" title="et cetera">&amp;c.</abbr></p>

<p>These styles should able to nest ordered lists to an infinite level or at least beyond the point where the width of the numbering exceeds available screen width.</p>

<h5 id="reversed-quot-reversed-quot"><code>reversed=&quot;reversed&quot;</code></h5>

<p>Regrettably, at the moment, the only way I know of visually expressing the meaning of the <a href="https://www.w3.org/TR/html5/grouping-content.html#attr-ol-reversed"><code>reversed=&quot;reversed&quot;</code></a> attribute for ordered lists depends on knowing the total number of list items and using a style to ‘count down’ from that number. I have omitted that styling since it is <em>not</em> adaptive and therefore of limited use.</p>

<h4 id="unordered-lists">Unordered lists</h4>

<p>Unordered lists are formatted to have different markers for each nesting depth up to a depth of five lists. This being (excluding the first level) the most that can be expressed using the mark-up <a href="https://www.w3.org/TR/html5/sections.html#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements"><code>h1</code> to <code>h6</code> heading elements</a>.</p>

<h3 id="hanging-and-outside-markers">Hanging and outside markers</h3>

<p>I find it easier on the eye, and easier to comprehend, when markers are outside of the list-item text and the markers for the top level of the list are hanging in the left-hand margin (unless the text direction is right-to-left) of its parent element.</p>

<h2 id="the-styles">The styles</h2>

<h3 id="margins-between-lists">Margins between lists</h3>

<p>I use a standard margin of one line between many elements including <code>ol</code> and <code>ul</code>. In the case of <code>line-height : 1.5</code> on the <code>body</code> or the <code>html</code> element this would equate to a standard vertical margin of <code>1.5rem</code>. However, for nested lists I want them to abut each other vertically:</p>
<pre class="code-quote css"><code><span class="nt">ol</span><span class="o">,</span>
<span class="nt">ul</span> <span class="p">{</span>
    <span class="nl">margin</span> <span class="p">:</span> <span class="m">1.4em</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">padding</span> <span class="p">:</span> <span class="m">0</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span><span class="o">,</span>
<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span><span class="o">,</span>
<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span><span class="o">,</span>
<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="p">{</span>
    <span class="nl">margin</span> <span class="p">:</span> <span class="m">0</span>
<span class="p">}</span>
</code></pre>

<h3 id="outside-markers">Outside markers</h3>

<p>By changing the display of <code>li</code> to table you enable the <code>li::before</code> pseudo element to have the <code>table-cell</code> display property and hang outside the list item text. On paged media it will also prevent list items from breaking across pages. <code>list-style : none</code> disables the usual user-agent display styles.</p>
<pre class="code-quote css"><code><span class="nt">li</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="n">table</span><span class="p">;</span>
    <span class="nl">list-style</span> <span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>

<span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="nb">table-cell</span>
<span class="p">}</span>
</code></pre>

<h3 id="hanging-markers-on-top-level-lists">Hanging markers on top-level lists</h3>

<p>The padding on the <code>body</code> element creates the space for the list markers of top-level lists to hang-in. I use <code>padding</code> rather than <code>margin</code> so that if a background colour is set on <code>body</code> the list marker is within the boundaries of the coloured background. The padding is set to an amount that can just about accommodate an ordered list marker up till “999” as well as a small remainder to leave space between the marker and the list text. The greater the padding the less horizontal space is available which is of particular concern for narrow screens.</p>

<p>If the parent element of the <code>ol</code> or <code>ul</code> is floated, it will have to have the same padding as <code>body</code> to create the same space for .</p>

<p>For the top level lists, their markers need to be ‘pulled’ left into the margin of their parent element. The <code>position : relative</code> of the <code>li</code> element allows the <code>li::before</code> pseudo element to be absolutely positioned. I pull the list marker left by the same length quantity as the padding above.</p>

<p>The markers pseudo element’s default width is only sufficient to contain the marker. I prefer the top level of ordered lists to be aligned right so I need to specify a width for the marker, as I am using <code>.2em</code> padding between the list markers and the list text so for the top-level list’s markers I specify a width equal to the above <code>body</code> padding, the left positioning and minus .<code>2em</code> to make the marker padding consistent for all levels:</p>
<pre class="code-quote css"><code><span class="nt">body</span> <span class="p">{</span>
    <span class="nl">padding</span> <span class="p">:</span> <span class="m">0</span> <span class="m">1.9em</span>
<span class="p">}</span>

<span class="nt">li</span> <span class="p">{</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">relative</span>
<span class="p">}</span>

<span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">left</span> <span class="p">:</span> <span class="m">-1.9em</span><span class="p">;</span>
    <span class="nl">width</span> <span class="p">:</span> <span class="m">1.7em</span><span class="p">;</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">absolute</span><span class="p">;</span>
    <span class="nl">text-align</span> <span class="p">:</span> <span class="nb">right</span>
<span class="p">}</span>
</code></pre>

<h3 id="undoing-the-positioning-top-level-positioning-for-nested-list-markers">Undoing the positioning top level positioning for nested list markers</h3>

<p>The below selectors again use <code>&gt;</code> to ensure that they are targeting only list items that are directly descended from other list items.</p>

<p>The only positive styling is the <code>padding-right : .2em</code> which is equivalent to the difference between the left positioning and width values for top level list items above.</p>

<p>The other stylings merely reset the value since the left positioning and right are align are only used for top level lists.</p>
<pre class="code-quote css"><code><span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span><span class="o">,</span>
<span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">padding-right</span> <span class="p">:</span> <span class="m">.2em</span><span class="p">;</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">static</span><span class="p">;</span>
    <span class="nl">text-align</span> <span class="p">:</span> <span class="n">initial</span><span class="p">;</span>
    <span class="nl">width</span> <span class="p">:</span> <span class="nb">auto</span>
<span class="p">}</span>
</code></pre>

<h3 id="setting-counters">Setting counters</h3>

<p>In their <a href="https://www.w3.org/TR/CSS21/"><cite>Cascading Style Sheets Level 2 Revision 1 (<abbr title="Cascading Style Sheets" class="initialism">C.S.S.</abbr> 2.1) Specification</cite></a> the <a href="https://www.w3.org/TR/CSS21/generate.html#scope"><abbr title="World Wide Web Consortium" class="initialism">W.3.C.</abbr> recommended resetting counters on the <code>ol</code> element</a>. Unfortunately, they seem to have been as perplexed by their counter rules as everyone else. Reseting counters on the <code>ol</code> element means that <em>an ordered list which is the descendent of a sibling element of a previous ordered list will behave as a continuation of the previous list</em>. Quite a mouthful; suffice to say, reset counters on the <code>first-child</code> of an ordered list.</p>

<p>It is necessary to specify “counter” for top level ordered lists and then “counters” for nested ordered lists to be able to display a properly numbered ordered list within an unordered list.</p>

<p>Since I am using full stops to punctuate the numbers in nested ordered list markers they can become quite wide and have too much space for my taste (as with initialisms). I constrict them with a small amount of negative <code>letter-spacing</code>.</p>
<pre class="code-quote css"><code><span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">:first-child</span> <span class="p">{</span>
    <span class="nl">counter-reset</span> <span class="p">:</span> <span class="n">item</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="n">counter</span><span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="s1">". "</span><span class="p">;</span>
    <span class="nl">counter-increment</span> <span class="p">:</span> <span class="n">item</span><span class="p">;</span>
    <span class="nl">letter-spacing</span> <span class="p">:</span> <span class="m">-.025em</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="n">counters</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="s1">"."</span><span class="p">)</span> <span class="s1">". "</span>
<span class="p">}</span>
</code></pre>

<h2 id="unordered-lists">Unordered lists</h2>

<p>Again, I am using <code>&gt;</code> to ensure that lists are at a descendent level in relation to another unordered list:</p>
<pre class="code-quote css"><code><span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"➢"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✽"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✦"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✯"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✤"</span>
<span class="p">}</span>
</code></pre>

<h3 id="unsetting-styles">Unsetting styles</h3>

<p>To remove the above generated styles for ordered and unordered styles:</p>
<pre class="code-quote css"><code><span class="nc">.no-markers</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>

<span class="nc">.no-markers</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">:first-child</span> <span class="p">{</span>
    <span class="nl">counter-reset</span> <span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>
</code></pre>

<p>The <code>no-markers</code> class is for illustrative purposes.</p>

<h2 id="all-styles">All styles</h2>

<p>I like to verbosely annotate my styles and then strip those comments (as well as any whitespace) before uploading them. The following styles are therefore replete with comments that echo the above article:</p>
<pre class="code-quote css"><code><span class="nt">body</span> <span class="p">{</span>
    <span class="nl">padding</span> <span class="p">:</span> <span class="m">0</span> <span class="m">1.9em</span>
<span class="p">}</span>

<span class="nt">ol</span><span class="o">,</span>
<span class="nt">ul</span> <span class="p">{</span>
    <span class="nl">margin</span> <span class="p">:</span> <span class="m">1.4em</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">padding</span> <span class="p">:</span> <span class="m">0</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span><span class="o">,</span>
<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span><span class="o">,</span>
<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span><span class="o">,</span>
<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="p">{</span>
    <span class="nl">margin</span> <span class="p">:</span> <span class="m">0</span> <span class="c">/* Remove margins between lists nested within other lists */</span>
<span class="p">}</span>

<span class="nt">li</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="n">table</span> <span class="c">/* Needed to enable “table-cell” display on “li::before” */</span><span class="p">;</span>
    <span class="nl">list-style</span> <span class="p">:</span> <span class="nb">none</span> <span class="c">/* Remove automatic markers */</span><span class="p">;</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">relative</span> <span class="c">/* This allows the top–nesting-level of lists to have their markers absolutely positioned into the margin of their parent element */</span>
<span class="p">}</span>

<span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="nb">table-cell</span> <span class="c">/* Means that the marker is placed outside of item text */</span><span class="p">;</span>
    <span class="nl">left</span> <span class="p">:</span> <span class="m">-1.4em</span> <span class="c">/* For top level only, equal to the horizontal padding on the body element minus the same “.2em” as the padding on nested list items below */</span><span class="p">;</span>
    <span class="nl">width</span> <span class="p">:</span> <span class="m">1.2em</span> <span class="c">/* For top level only, creates space for list items up to “999” and enables “text-align : right” */</span><span class="p">;</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">absolute</span><span class="p">;</span>
    <span class="nl">text-align</span> <span class="p">:</span> <span class="nb">right</span> <span class="c">/* For top level only, my personal preference for the variable width list numbers within the top level of an ordered list */</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">:first-child</span> <span class="p">{</span>
    <span class="nl">counter-reset</span> <span class="p">:</span> <span class="n">item</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="n">counter</span><span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="s1">". "</span><span class="p">;</span>
    <span class="nl">counter-increment</span> <span class="p">:</span> <span class="n">item</span><span class="p">;</span>
    <span class="nl">letter-spacing</span> <span class="p">:</span> <span class="m">-.025em</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="n">counters</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="s1">"."</span><span class="p">)</span> <span class="s1">". "</span> <span class="c">/* It is necessary to specify ‘counter’ for top level ordered lists and then ‘counters’ for nested ordered lists to be able to display a properly numbered ordered list within an unordered list */</span>
<span class="p">}</span>

<span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span><span class="o">,</span>
<span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">padding-right</span> <span class="p">:</span> <span class="m">.2em</span><span class="p">;</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">static</span> <span class="c">/* Undo the positioning for top level items */</span><span class="p">;</span>
    <span class="nl">text-align</span> <span class="p">:</span> <span class="n">initial</span><span class="p">;</span>
    <span class="nl">width</span> <span class="p">:</span> <span class="nb">auto</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"➢"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✽"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✦"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✯"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✤"</span>
<span class="p">}</span>

<span class="nc">.no-markers</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>

<span class="nc">.no-markers</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">:first-child</span> <span class="p">{</span>
    <span class="nl">counter-reset</span> <span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>
</code></pre>
      </div>
    </content>
  </entry>
</feed>
