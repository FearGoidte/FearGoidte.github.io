<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fear Goidte</title>
  <subtitle>Pronounced like “Far Gotcha”. The splendid online isolation of me, James Ó Nuanáin, wherein I gather together any loose cleverness that I manage to accumulate. This site is, primarily an exegesis on how it was made. For the moment, it is mostly beak and bone with very little feather and fur.
</subtitle>
  <id>https://isfeargoidte.me.uk/</id>
  <link href="https://isfeargoidte.me.uk/"/>
  <link href="https://isfeargoidte.me.uk/atom.xml" rel="self"/>
  <updated>2016-06-06T00:46:00+01:00</updated>
  <author>
    <name>James Ó Nuanáin</name>
  </author>
  <entry>
    <title type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
BBEdit package for Middleman      </div>
    </title>
    <link rel="alternate" href="https://isfeargoidte.me.uk/2016/06/06/bbedit-package-for-middleman"/>
    <id>https://isfeargoidte.me.uk/2016/06/06/bbedit-package-for-middleman</id>
    <published>2016-06-06T00:46:00+01:00</published>
    <updated>2016-06-06T01:03:04+01:00</updated>
    <author>
      <name>James Ó Nuanáin</name>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
An assortment of clippings, scripts, and stationary for developing <a href="https://middlemanapp.com">Middleman</a> static websites using the <a href="http://www.barebones.com/products/bbedit/">BBEdit</a> text editor.
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
An assortment of clippings, scripts, and stationary for developing <a href="https://middlemanapp.com">Middleman</a> static websites using the <a href="http://www.barebones.com/products/bbedit/">BBEdit</a> text editor.
<p><img src="../../../../images/2016-06-06-bbedit-package-for-middleman-688f6432.svg" alt="2016 06 06 bbedit package for middleman" /></p>

<p>I’m always guilty of underusing BBEdit and since it’s my text editor of choice and Middleman is my website development tool of choice I’ve made a modest effort to improve the way I use the two together.</p>

<p>I’ve put this package on GitHub (<a href="https://github.com/FearGoidte/Middleman.bbpackage">FearGoidte/Middleman.bbpackage</a>) in the hope that it might prove of use to someone or even more than one. If you do find this useful, and you expand upon it, please create a fork and create a pull request if you want me to incorporate your improvements into my version.</p>

<p>This package is a work in progress, it includes a few useful <a href="http://www.barebones.com/support/bbedit/clippings_library.html">clippings</a> (more to come); scripts to launch the preview server and open the site in the default browser, build the site, and using <a href="https://github.com/middleman-contrib/middleman-deploy">middleman-deploy</a> deploy it to a server.</p>
      </div>
    </content>
  </entry>
  <entry>
    <title type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Render unto me, a table of contents      </div>
    </title>
    <link rel="alternate" href="https://isfeargoidte.me.uk/2016/05/23/render-unto-me-a-table-of-contents"/>
    <id>https://isfeargoidte.me.uk/2016/05/23/render-unto-me-a-table-of-contents</id>
    <published>2016-05-23T15:02:00+01:00</published>
    <updated>2016-05-23T15:05:52+01:00</updated>
    <author>
      <name>James Ó Nuanáin</name>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
To have an automatically generated table of contents whilst using the <a href="https://middlemanapp.com">Middleman</a> static site generator with Embedded Ruby for templates/layouts and markdown for simple formatting, I have made some modifications to a vanilla install of Middleman.
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
To have an automatically generated table of contents whilst using the <a href="https://middlemanapp.com">Middleman</a> static site generator with Embedded Ruby for templates/layouts and markdown for simple formatting, I have made some modifications to a vanilla install of Middleman.
<h2 id="background">Background</h2>

<p>Please bear in mind, that I am no programmer and have merely hacked together this ugly edifice. However, since I couldn’t <a href="https://duckduckgo.com">DuckDuckGo</a> a way of doing this I thought I would share my solution in case it is of use to someone else.</p>

<h2 id="code">Code</h2>

<h3 id="change-markdown-renderer-to-red-carpet">Change markdown renderer to red carpet</h3>

<p>Firstly, I am using <a href="https://github.com/vmg/redcarpet">Redcarpet</a> as my markdown renderer. Installation instructions are on their site. Once it is installed, to add Redcarpet to Middleman, insert the following into Middleman’s <code>Gemfile</code>:</p>
<pre class="code-quote ruby"><code><span class="n">gem</span> <span class="s2">"redcarpet"</span>
</code></pre>

<h3 id="generate-the-id-attributes-for-the-headings">Generate the <code>id</code> attributes for the headings</h3>

<p>In the <code>config.erb</code> file, I made the following changes.</p>

<p>Switched the renderer from the default <a href="http://kramdown.gettalong.org">Kramdown</a> to Redcarpet:</p>
<pre class="code-quote ruby"><code><span class="n">set</span> <span class="ss">:markdown_engine</span><span class="p">,</span> <span class="ss">:redcarpet</span>
<span class="n">set</span> <span class="ss">:markdown</span><span class="p">,</span> <span class="ss">with_toc_data: </span><span class="kp">true</span><span class="p">,</span>
               <span class="ss">xhtml: </span><span class="kp">true</span>
</code></pre>

<p>Create a helper file:</p>
<pre class="code-quote ruby"><code><span class="k">def</span> <span class="nf">table_of_contents</span><span class="p">(</span><span class="n">page</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">config</span><span class="p">.</span><span class="nf">markdown_engine</span> <span class="o">==</span> <span class="ss">:redcarpet</span> <span class="o">&amp;&amp;</span> <span class="n">config</span><span class="p">.</span><span class="nf">markdown</span><span class="p">[</span><span class="ss">:with_toc_data</span><span class="p">]</span>
    <span class="n">renderer</span> <span class="o">=</span> <span class="no">Redcarpet</span><span class="o">::</span><span class="no">Markdown</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="no">Redcarpet</span><span class="o">::</span><span class="no">Render</span><span class="o">::</span><span class="no">HTML_TOC</span><span class="p">,</span>
                                       <span class="ss">fenced_code_blocks: </span><span class="kp">true</span><span class="p">,</span>
                                       <span class="ss">xhtml: </span><span class="kp">true</span><span class="p">)</span>
    <span class="n">file</span> <span class="o">=</span> <span class="o">::</span><span class="no">File</span><span class="p">.</span><span class="nf">read</span><span class="p">(</span><span class="n">page</span><span class="p">.</span><span class="nf">source_file</span><span class="p">)</span>
    <span class="n">tocpre</span> <span class="o">=</span> <span class="s1">'&lt;nav&gt;&lt;h2&gt;Table of contents&lt;/h2&gt;'</span>
    <span class="n">tocpost</span> <span class="o">=</span> <span class="s1">'&lt;/nav&gt;'</span>
    <span class="c1"># ignore YAML frontmatter</span>
    <span class="n">file</span> <span class="o">=</span> <span class="n">file</span><span class="p">.</span><span class="nf">gsub</span><span class="p">(</span><span class="sr">/^(---\s*\n.*?\n?)^(---\s*$\n?)/m</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span>
    <span class="n">file</span> <span class="o">=</span> <span class="n">file</span><span class="p">.</span><span class="nf">gsub</span><span class="p">(</span><span class="s1">' &amp; '</span><span class="p">,</span> <span class="s1">' &amp;amp; '</span><span class="p">)</span>
    <span class="c1"># Switch to ordered lists</span>
    <span class="n">toc</span> <span class="o">=</span> <span class="n">renderer</span><span class="p">.</span><span class="nf">render</span><span class="p">(</span><span class="n">file</span><span class="p">)</span>
    <span class="n">toc</span> <span class="o">=</span> <span class="n">toc</span><span class="p">.</span><span class="nf">sub</span><span class="p">(</span><span class="s1">'&lt;ul&gt;'</span><span class="p">,</span> <span class="s1">'&lt;ol property="dcterms:tableofContents"&gt;'</span><span class="p">)</span>
    <span class="n">toc</span> <span class="o">=</span> <span class="n">toc</span><span class="p">.</span><span class="nf">gsub</span><span class="p">(</span><span class="s1">'&lt;ul&gt;'</span><span class="p">,</span> <span class="s1">'&lt;ol&gt;'</span><span class="p">)</span>
    <span class="n">toc</span> <span class="o">=</span> <span class="n">toc</span><span class="p">.</span><span class="nf">gsub</span><span class="p">(</span><span class="s1">'&lt;/ul&gt;'</span><span class="p">,</span> <span class="s1">'&lt;/ol&gt;'</span><span class="p">)</span>
    <span class="n">tocpre</span> <span class="o">+</span> <span class="n">toc</span> <span class="o">+</span> <span class="n">tocpost</span> <span class="k">unless</span> <span class="n">toc</span><span class="p">.</span><span class="nf">empty?</span>
  <span class="k">end</span> <span class="c1"># End check for Redcarpet and toc_data</span>
<span class="k">end</span>

</code></pre>

<p>Save the above code in a new file named  and saved in the <code>my_test_website\helpers\table_of_contents.rb</code> where “<code>my_test_website</code>” is the name of your project’s directory.</p>

<h3 id="generate-the-table-of-contents">Generate the table of contents</h3>

<p>The table of contents can then be added to a file that is processing embedded Ruby by adding the following code:</p>
<pre class="code-quote ruby"><code>    <span class="o">&lt;</span><span class="sx">%= table_of_contents(current_page) %&gt;
</span></code></pre>

<p>I tend to add this to my templates but it could also be added to an ‘article’ or ‘page’ file as long as the first of its extensions is <code>.erb</code>.</p>

<h2 id="end-note">End note</h2>

<p>I am sure that the code above could be simplified. <a href="https://github.com/vmg/redcarpet/issues/529"><em>Redcarpet</em> has an issue rendering ampersands and other characters with its renderer</a> so this code will need to be amended once that is fixed (<code>file = file.gsub(&#39; &amp; &#39;, &#39; &amp;amp; &#39;)</code>).</p>
      </div>
    </content>
  </entry>
  <entry>
    <title type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Enumerate the ways      </div>
    </title>
    <link rel="alternate" href="https://isfeargoidte.me.uk/2016/04/02/enumerate-the-ways"/>
    <id>https://isfeargoidte.me.uk/2016/04/02/enumerate-the-ways</id>
    <published>2016-04-02T22:25:00+01:00</published>
    <updated>2016-05-23T12:49:32+01:00</updated>
    <author>
      <name>James Ó Nuanáin</name>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The visual formatting of the <a href="https://www.w3.org/TR/html5/grouping-content.html#the-ol-element"><code>ol</code></a> and <a href="https://www.w3.org/TR/html5/grouping-content.html#the-ul-element"><code>ul</code></a> list elements and in particular; using generated content for the markers, setting them outside the list text, and having them ‘hang’ in the margin of the parent element.
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
The visual formatting of the <a href="https://www.w3.org/TR/html5/grouping-content.html#the-ol-element"><code>ol</code></a> and <a href="https://www.w3.org/TR/html5/grouping-content.html#the-ul-element"><code>ul</code></a> list elements and in particular; using generated content for the markers, setting them outside the list text, and having them ‘hang’ in the margin of the parent element.
<h2 id="background">Background</h2>

<p>The styles I use are designed to produce certain outcomes and have specific limitations which might conflict with your own needs. The full stylings used here as well as list examples is available on the Codepen (<a href="http://codepen.io/FearGoidte/pen/xVXJyg"><cite>Nested ordered and unordered lists with hanging markers</cite></a>).</p>

<h3 id="adaptability-of-styles">Adaptability of styles</h3>

<p>A list is <dfn>nested</dfn> when it is the direct descendent of another list as in the following stylesheet selector examples:</p>

<ul>
<li><code>ol &gt; li &gt; ol</code> and</li>
<li><code>ul &gt; li &gt; ol</code>.</li>
</ul>

<p>The number of direct-ancestor list elements a list has determines its nesting <dfn>level</dfn>.</p>

<h4 id="ordered-lists">Ordered lists</h4>

<p>Ordered lists are numbered 1., 1.1, 1.1.1 <abbr lang="la" title="et cetera">&amp;c.</abbr></p>

<p>These styles should able to nest ordered lists to an infinite level or at least beyond the point where the width of the numbering exceeds available screen width.</p>

<h5 id="reversed-quot-reversed-quot"><code>reversed=&quot;reversed&quot;</code></h5>

<p>Regrettably, at the moment, the only way I know of visually expressing the meaning of the <a href="https://www.w3.org/TR/html5/grouping-content.html#attr-ol-reversed"><code>reversed=&quot;reversed&quot;</code></a> attribute for ordered lists depends on knowing the total number of list items and using a style to ‘count down’ from that number. I have omitted that styling since it is <em>not</em> adaptive and therefore of limited use.</p>

<h4 id="unordered-lists">Unordered lists</h4>

<p>Unordered lists are formatted to have different markers for each nesting depth up to a depth of five lists. This being (excluding the first level) the most that can be expressed using the mark-up <a href="https://www.w3.org/TR/html5/sections.html#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements"><code>h1</code> to <code>h6</code> heading elements</a>.</p>

<h3 id="hanging-and-outside-markers">Hanging and outside markers</h3>

<p>I find it easier on the eye, and easier to comprehend, when markers are outside of the list-item text and the markers for the top level of the list are hanging in the left-hand margin (unless the text direction is right-to-left) of its parent element.</p>

<h2 id="the-styles">The styles</h2>

<h3 id="margins-between-lists">Margins between lists</h3>

<p>I use a standard margin of one line between many elements including <code>ol</code> and <code>ul</code>. In the case of <code>line-height : 1.5</code> on the <code>body</code> or the <code>html</code> element this would equate to a standard vertical margin of <code>1.5rem</code>. However, for nested lists I want them to abut each other vertically:</p>
<pre class="code-quote css"><code><span class="nt">ol</span><span class="o">,</span>
<span class="nt">ul</span> <span class="p">{</span>
    <span class="nl">margin</span> <span class="p">:</span> <span class="m">1.4em</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">padding</span> <span class="p">:</span> <span class="m">0</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span><span class="o">,</span>
<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span><span class="o">,</span>
<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span><span class="o">,</span>
<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="p">{</span>
    <span class="nl">margin</span> <span class="p">:</span> <span class="m">0</span>
<span class="p">}</span>
</code></pre>

<h3 id="outside-markers">Outside markers</h3>

<p>By changing the display of <code>li</code> to table you enable the <code>li::before</code> pseudo element to have the <code>table-cell</code> display property and hang outside the list item text. On paged media it will also prevent list items from breaking across pages. <code>list-style : none</code> disables the usual user-agent display styles.</p>
<pre class="code-quote css"><code><span class="nt">li</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="n">table</span><span class="p">;</span>
    <span class="nl">list-style</span> <span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>

<span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="nb">table-cell</span>
<span class="p">}</span>
</code></pre>

<h3 id="hanging-markers-on-top-level-lists">Hanging markers on top-level lists</h3>

<p>The padding on the <code>body</code> element creates the space for the list markers of top-level lists to hang-in. I use <code>padding</code> rather than <code>margin</code> so that if a background colour is set on <code>body</code> the list marker is within the boundaries of the coloured background. The padding is set to an amount that can just about accommodate an ordered list marker up till “999” as well as a small remainder to leave space between the marker and the list text. The greater the padding the less horizontal space is available which is of particular concern for narrow screens.</p>

<p>If the parent element of the <code>ol</code> or <code>ul</code> is floated, it will have to have the same padding as <code>body</code> to create the same space for .</p>

<p>For the top level lists, their markers need to be ‘pulled’ left into the margin of their parent element. The <code>position : relative</code> of the <code>li</code> element allows the <code>li::before</code> pseudo element to be absolutely positioned. I pull the list marker left by the same length quantity as the padding above.</p>

<p>The markers pseudo element’s default width is only sufficient to contain the marker. I prefer the top level of ordered lists to be aligned right so I need to specify a width for the marker, as I am using <code>.2em</code> padding between the list markers and the list text so for the top-level list’s markers I specify a width equal to the above <code>body</code> padding, the left positioning and minus .<code>2em</code> to make the marker padding consistent for all levels:</p>
<pre class="code-quote css"><code><span class="nt">body</span> <span class="p">{</span>
    <span class="nl">padding</span> <span class="p">:</span> <span class="m">0</span> <span class="m">1.9em</span>
<span class="p">}</span>

<span class="nt">li</span> <span class="p">{</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">relative</span>
<span class="p">}</span>

<span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">left</span> <span class="p">:</span> <span class="m">-1.9em</span><span class="p">;</span>
    <span class="nl">width</span> <span class="p">:</span> <span class="m">1.7em</span><span class="p">;</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">absolute</span><span class="p">;</span>
    <span class="nl">text-align</span> <span class="p">:</span> <span class="nb">right</span>
<span class="p">}</span>
</code></pre>

<h3 id="undoing-the-positioning-top-level-positioning-for-nested-list-markers">Undoing the positioning top level positioning for nested list markers</h3>

<p>The below selectors again use <code>&gt;</code> to ensure that they are targeting only list items that are directly descended from other list items.</p>

<p>The only positive styling is the <code>padding-right : .2em</code> which is equivalent to the difference between the left positioning and width values for top level list items above.</p>

<p>The other stylings merely reset the value since the left positioning and right are align are only used for top level lists.</p>
<pre class="code-quote css"><code><span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span><span class="o">,</span>
<span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">padding-right</span> <span class="p">:</span> <span class="m">.2em</span><span class="p">;</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">static</span><span class="p">;</span>
    <span class="nl">text-align</span> <span class="p">:</span> <span class="n">initial</span><span class="p">;</span>
    <span class="nl">width</span> <span class="p">:</span> <span class="nb">auto</span>
<span class="p">}</span>
</code></pre>

<h3 id="setting-counters">Setting counters</h3>

<p>In their <a href="https://www.w3.org/TR/CSS21/"><cite>Cascading Style Sheets Level 2 Revision 1 (<abbr title="Cascading Style Sheets" class="initialism">C.S.S.</abbr> 2.1) Specification</cite></a> the <a href="https://www.w3.org/TR/CSS21/generate.html#scope"><abbr title="World Wide Web Consortium" class="initialism">W.3.C.</abbr> recommended resetting counters on the <code>ol</code> element</a>. Unfortunately, they seem to have been as perplexed by their counter rules as everyone else. Reseting counters on the <code>ol</code> element means that <em>an ordered list which is the descendent of a sibling element of a previous ordered list will behave as a continuation of the previous list</em>. Quite a mouthful; suffice to say, reset counters on the <code>first-child</code> of an ordered list.</p>

<p>It is necessary to specify “counter” for top level ordered lists and then “counters” for nested ordered lists to be able to display a properly numbered ordered list within an unordered list.</p>

<p>Since I am using full stops to punctuate the numbers in nested ordered list markers they can become quite wide and have too much space for my taste (as with initialisms). I constrict them with a small amount of negative <code>letter-spacing</code>.</p>
<pre class="code-quote css"><code><span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">:first-child</span> <span class="p">{</span>
    <span class="nl">counter-reset</span> <span class="p">:</span> <span class="n">item</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="n">counter</span><span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="s1">". "</span><span class="p">;</span>
    <span class="nl">counter-increment</span> <span class="p">:</span> <span class="n">item</span><span class="p">;</span>
    <span class="nl">letter-spacing</span> <span class="p">:</span> <span class="m">-.025em</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="n">counters</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="s1">"."</span><span class="p">)</span> <span class="s1">". "</span>
<span class="p">}</span>
</code></pre>

<h2 id="unordered-lists">Unordered lists</h2>

<p>Again, I am using <code>&gt;</code> to ensure that lists are at a descendent level in relation to another unordered list:</p>
<pre class="code-quote css"><code><span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"➢"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✽"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✦"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✯"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✤"</span>
<span class="p">}</span>
</code></pre>

<h3 id="unsetting-styles">Unsetting styles</h3>

<p>To remove the above generated styles for ordered and unordered styles:</p>
<pre class="code-quote css"><code><span class="nc">.no-markers</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>

<span class="nc">.no-markers</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">:first-child</span> <span class="p">{</span>
    <span class="nl">counter-reset</span> <span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>
</code></pre>

<p>The <code>no-markers</code> class is for illustrative purposes.</p>

<h2 id="all-styles">All styles</h2>

<p>I like to verbosely annotate my styles and then strip those comments (as well as any whitespace) before uploading them. The following styles are therefore replete with comments that echo the above article:</p>
<pre class="code-quote css"><code><span class="nt">body</span> <span class="p">{</span>
    <span class="nl">padding</span> <span class="p">:</span> <span class="m">0</span> <span class="m">1.9em</span>
<span class="p">}</span>

<span class="nt">ol</span><span class="o">,</span>
<span class="nt">ul</span> <span class="p">{</span>
    <span class="nl">margin</span> <span class="p">:</span> <span class="m">1.4em</span> <span class="m">0</span><span class="p">;</span>
    <span class="nl">padding</span> <span class="p">:</span> <span class="m">0</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span><span class="o">,</span>
<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span><span class="o">,</span>
<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span><span class="o">,</span>
<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="p">{</span>
    <span class="nl">margin</span> <span class="p">:</span> <span class="m">0</span> <span class="c">/* Remove margins between lists nested within other lists */</span>
<span class="p">}</span>

<span class="nt">li</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="n">table</span> <span class="c">/* Needed to enable “table-cell” display on “li::before” */</span><span class="p">;</span>
    <span class="nl">list-style</span> <span class="p">:</span> <span class="nb">none</span> <span class="c">/* Remove automatic markers */</span><span class="p">;</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">relative</span> <span class="c">/* This allows the top–nesting-level of lists to have their markers absolutely positioned into the margin of their parent element */</span>
<span class="p">}</span>

<span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="nb">table-cell</span> <span class="c">/* Means that the marker is placed outside of item text */</span><span class="p">;</span>
    <span class="nl">left</span> <span class="p">:</span> <span class="m">-1.4em</span> <span class="c">/* For top level only, equal to the horizontal padding on the body element minus the same “.2em” as the padding on nested list items below */</span><span class="p">;</span>
    <span class="nl">width</span> <span class="p">:</span> <span class="m">1.2em</span> <span class="c">/* For top level only, creates space for list items up to “999” and enables “text-align : right” */</span><span class="p">;</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">absolute</span><span class="p">;</span>
    <span class="nl">text-align</span> <span class="p">:</span> <span class="nb">right</span> <span class="c">/* For top level only, my personal preference for the variable width list numbers within the top level of an ordered list */</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">:first-child</span> <span class="p">{</span>
    <span class="nl">counter-reset</span> <span class="p">:</span> <span class="n">item</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="n">counter</span><span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="s1">". "</span><span class="p">;</span>
    <span class="nl">counter-increment</span> <span class="p">:</span> <span class="n">item</span><span class="p">;</span>
    <span class="nl">letter-spacing</span> <span class="p">:</span> <span class="m">-.025em</span>
<span class="p">}</span>

<span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="n">counters</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="s1">"."</span><span class="p">)</span> <span class="s1">". "</span> <span class="c">/* It is necessary to specify ‘counter’ for top level ordered lists and then ‘counters’ for nested ordered lists to be able to display a properly numbered ordered list within an unordered list */</span>
<span class="p">}</span>

<span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ol</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span><span class="o">,</span>
<span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">padding-right</span> <span class="p">:</span> <span class="m">.2em</span><span class="p">;</span>
    <span class="nl">position</span> <span class="p">:</span> <span class="nb">static</span> <span class="c">/* Undo the positioning for top level items */</span><span class="p">;</span>
    <span class="nl">text-align</span> <span class="p">:</span> <span class="n">initial</span><span class="p">;</span>
    <span class="nl">width</span> <span class="p">:</span> <span class="nb">auto</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"➢"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✽"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✦"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✯"</span>
<span class="p">}</span>

<span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">content</span> <span class="p">:</span> <span class="s1">"✤"</span>
<span class="p">}</span>

<span class="nc">.no-markers</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">::before</span> <span class="p">{</span>
    <span class="nl">display</span> <span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>

<span class="nc">.no-markers</span> <span class="o">&gt;</span> <span class="nt">li</span><span class="nd">:first-child</span> <span class="p">{</span>
    <span class="nl">counter-reset</span> <span class="p">:</span> <span class="nb">none</span>
<span class="p">}</span>
</code></pre>
      </div>
    </content>
  </entry>
  <entry>
    <title type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Reading whilst watching (and listening)      </div>
    </title>
    <link rel="alternate" href="https://isfeargoidte.me.uk/2016/03/25/reading-whilst-watching-and-listening"/>
    <id>https://isfeargoidte.me.uk/2016/03/25/reading-whilst-watching-and-listening</id>
    <published>2016-03-25T21:15:00+00:00</published>
    <updated>2016-05-23T12:49:32+01:00</updated>
    <author>
      <name>James Ó Nuanáin</name>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
A short note on typography for the <cite>SubRip text file format</cite> for providing subtitles for films.
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
A short note on typography for the <cite>SubRip text file format</cite> for providing subtitles for films.
<p>Subtitles are generally read whilst you’re trying to simultaneously watch a film <em>and</em> listen to the voices to gauge the emotion and intention of the character or person speaking. That is a lot to ask of a partially-shaved monkey; and anything that can speed comprehension is a boon. Poor spelling, straight quotation marks, and lazy punctuation are an unnecessary burden.</p>

<p>I have a tendency to frequently rewatch films—though with varying degrees of attention—so for me, the fifteen minutes or half an hour it takes for me to edit the subtitles has some quality of investment. By uploading the edited subtitles to a site such as <a href="https://subscene.com/u/998178">Subscene</a>, others can benefit from, or be subjected to, your pernicketiness.</p>

<h2 id="specifying-encoding">Specifying encoding</h2>

<p>You always want to use <a href="https://www.ietf.org/rfc/rfc3629.txt">utf-8</a>. Other than accented letters; it enables you to use curly quotes, horizontal ellipses, and varying widths of dash. The mechanism for declaring the encoding of a <code>.srt</code> file is to use the <a href="https://www.w3.org/International/questions/qa-byte-order-mark.en.php#answer">byte-order mark</a>.</p>

<h2 id="conventions-particular-to-subtitles">Conventions particular to subtitles</h2>

<p>The only two widely-supported styling options for the text are the bold (<code>&lt;b&gt;</code>) and italic (<code>&lt;i&gt;</code>) mark-up elements. Computers tend to embolden fonts by drawing over them with bigger, thicker pen rendering ugly results so I only use italics.</p>

<p>Use italic to emphasis an individual word in speech where it is emphasized in the dialogue, “she said <em>what</em>?”; to indicate the dialogue is being spoken by someone off camera, out of focus, or in the background whilst another character is in the foreground and in focus; and for intertitles.</p>

<p>An em dash (—) indicates the beginning of a line of dialogue. If two characters’ or people’s dialogue is on the screen at the same time, each characters line is introduced with an em dash:</p>

<pre>—Are you going to sit down?<br />
—Give me a second to take off my coat.</pre>

<aside>I usually format initialisms using intervening full-stops. This habit is hardly a popular stylist choice but for subtitles it definitely does make them easier to digest.</aside>

<h2 id="naming-subtitles-files">Naming subtitles files</h2>

<p>My own video players of preference, <a href="https://plex.tv">Plex</a> and <a href="https://www.videolan.org/vlc/">V.L.C.</a>, favour a naming convention of a film title followed by the year of release in brackets (“<cite xml:lang="es">Relatos salvajes</cite> (2014)”) for a folder containing the film and subitle file similarly name with an <a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">I.S.O. code</a> signifying the language (<a href="https://support.plex.tv/hc/en-us/articles/200471133-Adding-Local-Subtitles-to-Your-Media">Adding Local Subtitles to Your Media</a>):</p>

<pre><samp>
/Films<br />
   /Relatos salvajes (2014)<br />
      Relatos salvajes (2014).m4v<br />
      Relatos salvajes (2014).<em>en</em>.srt<br />
</samp></pre>

<h2 id="common-corrections">Common corrections</h2>

<h3 id="i-impersonating-l">“I” impersonating “l”</h3>

<p>Many subtitles contain the capital letter <em>I</em> masquerading as a lowercase <em>L</em>. On some sans-serif fonts the characters are indistinguishable (as is the number <em>1</em>) but using a serif font, they are quite dissimilar. Since this bamboozles my spellchecker, I use the following <a href="https://en.wikipedia.org/wiki/Grep">grep</a> pattern (in <a href="http://www.barebones.com/products/bbedit/">BBEdit</a> my text editor of choice) to identify them.</p>

<p>An uppercase <em>I</em> immediately preceded by a lowercase letter:</p>
<pre class="code-quote plaintext"><code>[a-z]I
</code></pre>

<h2 id="fin"><span xml:lang="fr">Fin</span></h2>

<p><cite>SubRip text file format</cite> is a convention rather than a standard, hence the brevity of this note. Additional information about using the whole gamut of graphemes available in English are plentiful elsewhere and probably lurking elsewhere on this site. Happy captioning.</p>
      </div>
    </content>
  </entry>
  <entry>
    <title type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
404 ‘file not found’ error page for GitHub pages and Middleman      </div>
    </title>
    <link rel="alternate" href="https://isfeargoidte.me.uk/2016/03/22/404-error-github-pages-middleman"/>
    <id>https://isfeargoidte.me.uk/2016/03/22/404-error-github-pages-middleman</id>
    <published>2016-03-22T16:00:00+00:00</published>
    <updated>2016-04-07T08:34:15+01:00</updated>
    <author>
      <name>James Ó Nuanáin</name>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
How to setup a custom <a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.5">404 page</a> for a site generated by <a href="https://middlemanapp.com">Middleman</a> and hosted on <a href="https://pages.github.com">GitHub pages</a>.
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
How to setup a custom <a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.5">404 page</a> for a site generated by <a href="https://middlemanapp.com">Middleman</a> and hosted on <a href="https://pages.github.com">GitHub pages</a>.
<p>The 404 ‘file not found’ error is generated when a user-agent attempts to access a document that does not exist. It is helpful to redirect these errors to a document that can explain to someone that there is no document at the address they were accessing. It’s an added bonus if you can provide them with a way to find the document for which they were looking.</p>

<p>GitHub pages doesn’t support server redirects. <a href="https://help.github.com/articles/creating-a-custom-404-page-for-your-github-pages-site/">GitHub does support a custom ’file not found‘ error page but it <em>must</em> be named <code>404.html</code> <em>or</em> <code>404.md</code></a>.</p>

<h2 id="directory-indices">Directory indices</h2>

<p>Since the file must be named <code>404.html</code> or <code>404.md</code>; if you’re using directory indices, they need to be turned off for the <code>404.html</code> file (<code>https://example.com/404/</code> and <code>https://example.com/404</code> will just redirect users to GutHub’s own 404 page. So assuming that you’re using <code>404.html</code>, add the following to your <code>config.rb</code> file:</p>
<pre class="code-quote ruby"><code><span class="n">page</span> <span class="s1">'/404.html'</span><span class="p">,</span> <span class="ss">directory_index: </span><span class="kp">false</span>
</code></pre>

<p>If you’re using the <a href="https://github.com/middleman/middleman-blog"><cite>middleman-blog</cite></a> extension, the directory indices settings—including the above—need to follow (rather than precede) the blog settings for them to work with pages generated by the blogging extension.</p>

<h2 id="application-xhtml-xml"><code>application/xhtml+xml</code></h2>

<p>Due to my utopian, and contrarian, nature I am still banging a tiny drum for <abbr title="eXtensible Hypertext Mark-up Language" class="initialism">X.H.T.M.L.</abbr> served with the proper mime-type.</p>

<p>GitHub does not support using a file called <code>404.xhtml</code> (though they are looking at it) and bases its mime-types on the extension of files so the error page needs to be a document with the extension <code>.html</code> document. For this I use a separate <code>404_layout.rb</code> file with the mark-up tweaked for style-sheets via a link element and declaring the encoding using a meta tag.</p>

<h2 id="relative-links">Relative links</h2>

<p>Because <cite>GitHub pages</cite> is not using a server redirect for your custom page, you can’t use relative links as they will only work when you access the page directly: <code>example.com/404.html</code>.</p>

<p>Instead, the template and the layout file must use absolute links to assets (images, style-sheets <abbr lang="la" title="et cetera">&amp;c.</abbr>) as well as to other pages on your site.</p>

<h2 id="wrap-up">Wrap-up</h2>

<p>I haven’t bothered with the content of the 404 document itself, since that is dependent on the existing navigational elements of your site.</p>

<p>I think you should include both a reference to “file not found” and “404” in the title, since those terms should be familiar to many users.</p>

<p>An ability to search the site and possibly a replication of any archive page are also good ideas for content.</p>

<p>Avoid being too adamant that it’s the user’s fault or being too passive aggressive—surprisingly, those are quite common for the content of 404 pages.</p>

<p>My own is inexcusably terse: <a href="https://isfeargoidte.me.uk/404.html">Fear Goidte’s 404</a> but I have an archive link on my site-wide navigation menu and not enough content to warrant an ability to search the site from within the site.</p>
      </div>
    </content>
  </entry>
  <entry>
    <title type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
“Tag!”, Middleman is it      </div>
    </title>
    <link rel="alternate" href="https://isfeargoidte.me.uk/2016/02/19/tag-middleman-is-it"/>
    <id>https://isfeargoidte.me.uk/2016/02/19/tag-middleman-is-it</id>
    <published>2016-02-19T10:30:00+00:00</published>
    <updated>2016-05-23T12:49:32+01:00</updated>
    <author>
      <name>James Ó Nuanáin</name>
    </author>
    <summary type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Doing more with the <a href="https://middlemanapp.com/basics/blogging/">middleman-blog</a> extension’s tags. Adding descriptions, names with inline mark-up, and the tag <code>rel</code> attribute. This is assuming that you have setup a blank blog as per <dfn><a href="/2016/02/02/would-have-worn-gloves#nav_main">If I’d known there’d be so much typing, I would have worn gloves</a></dfn>.
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
Doing more with the <a href="https://middlemanapp.com/basics/blogging/">middleman-blog</a> extension’s tags. Adding descriptions, names with inline mark-up, and the tag <code>rel</code> attribute. This is assuming that you have setup a blank blog as per <dfn><a href="/2016/02/02/would-have-worn-gloves#nav_main">If I’d known there’d be so much typing, I would have worn gloves</a></dfn>.
<h2 id="displaying-tags-alphabetically">Displaying tags alphabetically</h2>

<p>Especially with a long list of tags, and extra-especially when accessing them through voice or touch; it would be nice to have an idea of where you are in the list. Alphabetically ordering the tags gives someone and idea of where they are and the direction to go in to find a particular tag (up/back forward/behind).</p>

<p>The current ruby code displays tags in articles (<code>current_article.tags</code>) in the order in which they are entered in the front matter of that post, and for archives (<code>blog.tags</code>) <em>I think</em> they are displayed in the order in which they first appear in an article:</p>
<pre class="code-quote erb"><code><span class="cp">&lt;%</span> <span class="n">blog</span><span class="p">.</span><span class="nf">tags</span><span class="p">.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag</span><span class="p">,</span> <span class="n">articles</span><span class="o">|</span> <span class="cp">%&gt;</span>
</code></pre>

<p>To re-order them alphabetically:</p>
<pre class="code-quote erb"><code><span class="cp">&lt;%</span> <span class="n">blog</span><span class="p">.</span><span class="nf">tags</span><span class="p">.</span><span class="nf">sort</span><span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">|</span> <span class="n">a</span><span class="p">.</span><span class="nf">to_s</span><span class="p">.</span><span class="nf">downcase</span> <span class="o">&lt;=&gt;</span> <span class="n">b</span><span class="p">.</span><span class="nf">to_s</span><span class="p">.</span><span class="nf">downcase</span> <span class="p">}.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag</span><span class="p">,</span> <span class="n">articles</span><span class="o">|</span> <span class="cp">%&gt;</span>
</code></pre>

<p>The <code>to_s.downcase</code> changes the tags to lowercase for sorting purposes, otherwise they are ordered by uppercase, and then by lowercase as two separate but adjacent logical lists.</p>

<h2 id="descriptions-and-names-with-inline-mark-up">Descriptions and names with inline mark-up</h2>

<p>These are instructions to optionally create descriptions for tags as well as names with inline mark-up that can be used for link text and as titles on tag archives.</p>

<h3 id="yaml-data"><abbr title="YAML Ain’t Markup Language" class="initialism">YAML</abbr> data</h3>

<p>Create a new <code>.yaml</code> file to hold the data: <code>/data/tags.yaml</code>.</p>

<p>Add entries to the file in the following format:</p>
<pre class="code-quote yaml"><code><span class="s">XHTML</span><span class="pi">:</span>
  <span class="s">name</span><span class="pi">:</span> <span class="s">&lt;abbr title="eXtensible Hypertext Mark-up Language" class="initialism"&gt;X.H.T.M.L.&lt;/abbr&gt;</span>
  <span class="s">description</span><span class="pi">:</span> <span class="pi">&gt;</span>
    <span class="no">Extensible Hypertext Markup Language is part of the family of &lt;abbr title="eXtensible Markup Language" class="initialism"&gt;X.M.L.&lt;/abbr&gt; markup languages. It mirrors or extends versions of Hypertext Markup Language (&lt;dfn class="initialism"&gt;H.T.M.L.&lt;/dfn&gt;).</span>
<span class="s">application/xhtml+xml</span><span class="pi">:</span>
  <span class="s">name</span><span class="pi">:</span> <span class="s">&lt;code&gt;application/xhtml+xml&lt;/code&gt;</span>
  <span class="s">description</span><span class="pi">:</span> <span class="pi">&gt;</span>
    <span class="no">The &lt;dfn&gt;application/xhtml+xml&lt;/dfn&gt; media type (&lt;a href="http://www.rfc-editor.org/rfc/rfc3236.txt"&gt;RFC3236&lt;/a&gt;) is the primary media type for &lt;abbr title="eXtensible Hypertext Mark-up Language" class="initialism"&gt;X.H.T.M.L.&lt;/abbr&gt; Family documents.</span>
</code></pre>

<p>Where the first line “<code>XHTML:</code>” matches the tag as referenced in your article’s front matter and “<code>name: &lt;abbr title=&quot;eXtensible Hypertext Mark-up Language&quot; class=&quot;initialism&quot;&gt;X.H.T.M.L.&lt;/abbr&gt;</code>” matches the name of the tag as you would like it displayed within the body of your documents (links and titles).</p>

<h3 id="article-headers">Article headers</h3>

<p>Code for listing the tags in the article header:</p>
<pre class="code-quote erb"><code><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">current_article</span><span class="p">.</span><span class="nf">tags</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;dl&gt;</span>
    <span class="nt">&lt;dt&gt;</span>Tagged with<span class="nt">&lt;/dt&gt;</span>
    <span class="cp">&lt;%</span> <span class="n">current_article</span><span class="p">.</span><span class="nf">tags</span><span class="p">.</span><span class="nf">sort</span><span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">|</span> <span class="n">a</span><span class="p">.</span><span class="nf">to_s</span><span class="p">.</span><span class="nf">downcase</span> <span class="o">&lt;=&gt;</span> <span class="n">b</span><span class="p">.</span><span class="nf">to_s</span><span class="p">.</span><span class="nf">downcase</span> <span class="p">}.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag</span><span class="p">,</span> <span class="n">articles</span><span class="o">|</span> <span class="cp">%&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">data</span><span class="p">[</span><span class="s1">'tags'</span><span class="p">][</span><span class="n">tag</span><span class="p">.</span><span class="nf">to_sym</span><span class="p">]</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;dd&gt;&lt;a</span> <span class="na">href=</span><span class="s">"</span><span class="cp">&lt;%=</span> <span class="n">url_for</span> <span class="n">tag_path</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="s">"</span> <span class="na">rel=</span><span class="s">"tag"</span><span class="nt">&gt;</span><span class="cp">&lt;%=</span> <span class="n">data</span><span class="p">[</span><span class="s1">'tags'</span><span class="p">][</span><span class="n">tag</span><span class="p">.</span><span class="nf">to_sym</span><span class="p">][</span><span class="ss">:name</span><span class="p">]</span> <span class="cp">%&gt;</span><span class="nt">&lt;/a&gt;&lt;/dd&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;dd&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">tag</span><span class="p">,</span> <span class="n">tag_path</span><span class="p">(</span><span class="n">tag</span><span class="p">),</span> <span class="ss">rel: </span><span class="s1">'tag'</span> <span class="cp">%&gt;</span><span class="nt">&lt;/dd&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/dl&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</code></pre>

<p>For the article headers, the tag links have <code>rel=&quot;tag&quot;</code> attributes. Read more about this attribute at <a href="https://www.w3.org/TR/html5/links.html#link-type-tag">4.8.4.12 Link type “tag”—<cite><abbr title="Hypertext Mark-up Language" class="initialism">H.T.M.L.</abbr>5
A vocabulary and associated <abbr title="application programming interface" class="initialism">A.P.I.</abbr>s for <abbr title="Hypertext Mark-up Language" class="initialism">H.T.M.L.</abbr> and <abbr title="eXtensible Hypertext Mark-up Language" class="initialism">X.H.T.M.L.</abbr></cite></a>.</p>

<h3 id="article-summaries">Article summaries</h3>

<p>Code for listing the tags in article summaries:</p>
<pre class="code-quote erb"><code><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">article</span><span class="p">.</span><span class="nf">tags</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;footer&gt;</span>
<span class="nt">&lt;dl&gt;</span>
    <span class="nt">&lt;dt&gt;</span>Tagged with<span class="nt">&lt;/dt&gt;</span>
    <span class="cp">&lt;%</span> <span class="n">article</span><span class="p">.</span><span class="nf">tags</span><span class="p">.</span><span class="nf">sort</span><span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">|</span> <span class="n">a</span><span class="p">.</span><span class="nf">to_s</span><span class="p">.</span><span class="nf">downcase</span> <span class="o">&lt;=&gt;</span> <span class="n">b</span><span class="p">.</span><span class="nf">to_s</span><span class="p">.</span><span class="nf">downcase</span> <span class="p">}.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag</span><span class="p">,</span> <span class="n">articles</span><span class="o">|</span> <span class="cp">%&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">data</span><span class="p">[</span><span class="s1">'tags'</span><span class="p">][</span><span class="n">tag</span><span class="p">.</span><span class="nf">to_sym</span><span class="p">]</span> <span class="cp">%&gt;</span>
            <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">current_page</span><span class="p">.</span><span class="nf">url</span> <span class="o">==</span> <span class="n">tag_path</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;dd&gt;</span><span class="cp">&lt;%=</span> <span class="n">data</span><span class="p">[</span><span class="s1">'tags'</span><span class="p">][</span><span class="n">tag</span><span class="p">.</span><span class="nf">to_sym</span><span class="p">][</span><span class="ss">:name</span><span class="p">]</span> <span class="cp">%&gt;</span><span class="nt">&lt;/dd&gt;</span>
           <span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;dd&gt;&lt;a</span> <span class="na">href=</span><span class="s">"</span><span class="cp">&lt;%=</span> <span class="n">url_for</span> <span class="n">tag_path</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span><span class="cp">&lt;%=</span> <span class="n">data</span><span class="p">[</span><span class="s1">'tags'</span><span class="p">][</span><span class="n">tag</span><span class="p">.</span><span class="nf">to_sym</span><span class="p">][</span><span class="ss">:name</span><span class="p">]</span> <span class="cp">%&gt;</span><span class="nt">&lt;/a&gt;&lt;/dd&gt;</span>
            <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
            <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">current_page</span><span class="p">.</span><span class="nf">url</span> <span class="o">==</span> <span class="n">tag_path</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;dd&gt;</span><span class="cp">&lt;%=</span> <span class="n">tag</span> <span class="cp">%&gt;</span><span class="nt">&lt;/dd&gt;</span>
           <span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;dd&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">tag</span><span class="p">,</span> <span class="n">tag_path</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="nt">&lt;/dd&gt;</span>
            <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/dl&gt;</span>
<span class="nt">&lt;/footer&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</code></pre>

<h3 id="main-archive">Main archive</h3>

<p>Code for listing links to the tag archives on a main archive page:</p>
<pre class="code-quote erb"><code><span class="nt">&lt;ol&gt;</span>
<span class="cp">&lt;%</span> <span class="n">blog</span><span class="p">.</span><span class="nf">tags</span><span class="p">.</span><span class="nf">sort</span><span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="o">|</span> <span class="n">a</span><span class="p">.</span><span class="nf">to_s</span><span class="p">.</span><span class="nf">downcase</span>   <span class="o">&lt;=&gt;</span> <span class="n">b</span><span class="p">.</span><span class="nf">to_s</span><span class="p">.</span><span class="nf">downcase</span>   <span class="p">}.</span><span class="nf">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">tag</span><span class="p">,</span> <span class="n">articles</span><span class="o">|</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">data</span><span class="p">[</span><span class="s1">'tags'</span><span class="p">][</span><span class="n">tag</span><span class="p">.</span><span class="nf">to_sym</span><span class="p">]</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"</span><span class="cp">&lt;%=</span> <span class="n">url_for</span> <span class="n">tag_path</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span><span class="cp">&lt;%=</span> <span class="n">data</span><span class="p">[</span><span class="s1">'tags'</span><span class="p">][</span><span class="n">tag</span><span class="p">.</span><span class="nf">to_sym</span><span class="p">][</span><span class="ss">:name</span><span class="p">]</span> <span class="cp">%&gt;</span><span class="nt">&lt;/a&gt;</span> (<span class="cp">&lt;%=</span> <span class="n">spell_out</span><span class="p">(</span><span class="n">articles</span><span class="p">.</span><span class="nf">size</span><span class="p">)</span> <span class="cp">%&gt;</span>)—<span class="cp">&lt;%=</span> <span class="n">data</span><span class="p">[</span><span class="s1">'tags'</span><span class="p">][</span><span class="n">tag</span><span class="p">.</span><span class="nf">to_sym</span><span class="p">][</span><span class="ss">:description</span><span class="p">]</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"</span><span class="si">#{</span><span class="n">tag</span><span class="si">}</span><span class="s2">"</span><span class="p">,</span> <span class="n">tag_path</span><span class="p">(</span><span class="n">tag</span><span class="p">)</span> <span class="cp">%&gt;</span> (<span class="cp">&lt;%=</span> <span class="n">spell_out</span><span class="p">(</span><span class="n">articles</span><span class="p">.</span><span class="nf">size</span><span class="p">)</span> <span class="cp">%&gt;</span>)<span class="nt">&lt;/li&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/ol&gt;</span>
</code></pre>

<p>The above depends on having a <code>\helpers\spell_out.rb</code> file containing:</p>
<pre class="code-quote erb"><code>def spell_out(value)
  value = value.to_i
  if value &gt;= 0 <span class="err">&amp;&amp;</span> value <span class="nt">&lt; 11</span>
    <span class="na">return</span> <span class="err">%</span><span class="na">w</span><span class="err">(</span><span class="na">zero</span> <span class="na">one</span> <span class="na">two</span> <span class="na">three</span> <span class="na">four</span> <span class="na">five</span> <span class="na">six</span> <span class="na">seven</span> <span class="na">eight</span> <span class="na">nine</span> <span class="na">ten</span><span class="err">)[</span><span class="na">value</span><span class="err">]</span>
  <span class="na">else</span>
    <span class="na">return</span> <span class="na">value</span>
  <span class="na">end</span>
<span class="na">end</span>

</code></pre>

<h3 id="tag-archives">Tag archives</h3>

<p>This code is for the generated individual tag archives (<code>source\tag.xhtml.erb</code>):</p>
<pre class="code-quote erb"><code><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">data</span><span class="p">[</span><span class="s1">'tags'</span><span class="p">][</span><span class="n">tagname</span><span class="p">.</span><span class="nf">to_sym</span><span class="p">]</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1</span> <span class="na">property=</span><span class="s">"dcterms:title"</span><span class="nt">&gt;</span>Articles tagged <span class="nt">&lt;em&gt;</span><span class="cp">&lt;%=</span> <span class="n">data</span><span class="p">[</span><span class="s1">'tags'</span><span class="p">][</span><span class="n">tagname</span><span class="p">.</span><span class="nf">to_sym</span><span class="p">][</span><span class="ss">:name</span><span class="p">]</span> <span class="cp">%&gt;</span><span class="nt">&lt;/em&gt;&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">data</span><span class="p">[</span><span class="s1">'tags'</span><span class="p">][</span><span class="n">tagname</span><span class="p">.</span><span class="nf">to_sym</span><span class="p">][</span><span class="ss">:description</span><span class="p">]</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/p&gt;</span>
<span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1</span> <span class="na">property=</span><span class="s">"dcterms:title"</span><span class="nt">&gt;</span>Articles tagged <span class="nt">&lt;em&gt;</span><span class="cp">&lt;%=</span> <span class="n">tagname</span> <span class="cp">%&gt;</span><span class="nt">&lt;/em&gt;&lt;/h1&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</code></pre>

<h2 id="conclusion">Conclusion</h2>

<p>A little short on exposition but contains all the necessary code.</p>
      </div>
    </content>
  </entry>
</feed>
